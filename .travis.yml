dist: xenial
sudo: required
language: bash
group: travis_latest
services: 
  - docker
addons:
  apt:
    # update: true
    # sources:
    # - sourceline: 'deb [arch=amd64] "https://download.docker.com/linux/ubuntu" xenial stable edge test'
    packages:
    - jq
    # - docker-ce

env:
  global:
    - DOCKER_CLI_EXPERIMENTAL=enabled
    # - DOCKER_BUILDKIT=1

stages:
  - lint
  - build
  - scan

template:
- &build
  stage: build
  script:
    - cd "$IMAGE"
    - make build
    - docker images
  after_success:
    - if [ "$TRAVIS_BRANCH" == "master" ]; then
        make push ;
      fi
- &scan
  stage: scan
  cache:
    directories:
      - $HOME/.cache/trivy
  install:
    - wget https://github.com/knqyf263/trivy/releases/download/v"$trivy"/trivy_"$trivy"_Linux-64bit.tar.gz
    - tar zxvf trivy_"$trivy"_Linux-64bit.tar.gz
  script:
    - ./trivy --refresh --quiet
    - for arch in amd64 arm32v7 arm64v8; do
        ./trivy --exit-code 0 --severity HIGH -quiet $IMAGE:$arch-latest ;
        ./trivy --exit-code 1 --severity CRITICAL --quiet $IMAGE:$arch-latest ;
      done

jobs:
  include:
    - stage: lint
      env: HADOLINT="$HOME/hadolint"
      install: curl -sLo "$HADOLINT" $(curl -s https://api.github.com/repos/hadolint/hadolint/releases/latest?access_token="$GITHUB_TOKEN" | jq -r '.assets | .[] | select(.name=="hadolint-Linux-x86_64") | .browser_download_url')
               && chmod 700 ${HADOLINT}
      script:
        - git ls-files --exclude='*Dockerfile' --ignored | xargs --max-lines=1 "$HADOLINT"
        - bash -c 'shopt -s globstar; shellcheck **/*.sh'
    - <<: *build
      env: IMAGE=archisteamfarm
    - <<: *build
      env: IMAGE=archisteamfarm
      script:
        - cd "$IMAGE"
        - make build-alpine
        - docker images
      after_success:
        - if [ "$TRAVIS_BRANCH" == "master" ]; then
            make push-alpine ;
          fi
    # - <<: *build
    #   env: IMAGE=code-server
    #   script:
    #     - cd "$IMAGE"
    #     - make build ARCH=amd64
    #     - docker images
    #   after_success:
    #     - if [ "$TRAVIS_BRANCH" == "master" ]; then
    #         make push amd64 ;
    #       fi
    # - <<: *build
    #   env: IMAGE=code-server
    #   script:
    #     - cd "$IMAGE"
    #     - make build ARCH=arm64
    #     - docker images
    #   after_success:
    #     - if [ "$TRAVIS_BRANCH" == "master" ]; then
    #         make push arm64v8 ;
    #       fi
    - <<: *build
      env: IMAGE=freshrss
    - <<: *build
      env: IMAGE=kibitzr
    - <<: *build
      env: IMAGE=reddiscord
    - <<: *build
      env: IMAGE=reddiscord
      script:
        - cd "$IMAGE"
        - make build-source
        - docker images
      after_success:
        - if [ "$TRAVIS_BRANCH" == "master" ]; then
            make push-source ;
          fi
    - <<: *build
      env: IMAGE=zeronet


    - <<: *scan
      env: trivy=0.0.14 IMAGE=supersandro2000/archisteamfarm VARIANT=alpine
      script:
      - ./trivy --refresh --quiet
      - for variant in master tag; do
          ./trivy --exit-code 0 --severity HIGH --quiet $IMAGE:$variant-alpine ;
          ./trivy --exit-code 1 --severity CRITICAL --quiet $IMAGE:$variant-alpine ;
        done
    # - <<: *scan
    #   env: trivy=0.0.14 IMAGE=supersandro2000/code-server
    - <<: *scan
      env: trivy=0.0.14 IMAGE=supersandro2000/kibitzr
    - <<: *scan
      env: trivy=0.0.14 IMAGE=supersandro2000/reddiscord
    - <<: *scan
      env: trivy=0.0.14 IMAGE=supersandro2000/reddiscord
      script:
      - ./trivy --refresh --quiet
      - for arch in amd64 arm32v7 arm64v8; do
          ./trivy --exit-code 0 --severity HIGH --quiet $IMAGE:$arch-source ;
          ./trivy --exit-code 1 --severity CRITICAL --quiet $IMAGE:$arch-source ;
        done
    - <<: *scan
      env: trivy=0.0.14 IMAGE=supersandro2000/zeronet
