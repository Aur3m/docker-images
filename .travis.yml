dist: xenial
sudo: required
language: bash
group: travis_latest
services:
  - docker

env:
  global:
    - DOCKER_CLI_EXPERIMENTAL=enabled
    # - DOCKER_BUILDKIT=1

stages:
  - lint
  - build
  - manifest
  - scan

template:
  - &build
    stage: build
    script:
      - cd "$IMAGE"
      - make build
      - docker images
    after_script:
      - if [ "$TRAVIS_BRANCH" == "master" ]; then
        make push ;
        fi

  - &manifest
    script:
      - cd "$IMAGE"
      - if [ "$TRAVIS_BRANCH" == "master" ]; then
        make manifest ;
        fi

  - &scan
    stage: scan
    cache:
      directories:
        - $HOME/.cache/trivy
    install:
      - wget https://github.com/knqyf263/trivy/releases/download/v"$trivy"/trivy_"$trivy"_Linux-64bit.tar.gz
      - tar zxvf trivy_"$trivy"_Linux-64bit.tar.gz
    script:
      - ./trivy --refresh --quiet || ./trivy --reset
      - for arch in amd64 armhf arm64; do
        ./trivy --exit-code 0 --severity HIGH -quiet $IMAGE:$arch-latest ;
        ./trivy --exit-code 1 --severity CRITICAL --quiet $IMAGE:$arch-latest ;
        done

jobs:
  include:
    - stage: lint
      env: HADOLINT="$HOME/hadolint"
      install:
        # - "curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install.sh | sudo bash"
        - curl -sLo "$HADOLINT" $(curl -s https://api.github.com/repos/hadolint/hadolint/releases/latest?access_token="$GITHUB_TOKEN" | jq -r '.assets | .[] | select(.name=="hadolint-Linux-x86_64") | .browser_download_url') && chmod 700 ${HADOLINT}
      script:
        # - fossa init
        - git ls-files --exclude='*Dockerfile*' --ignored | xargs --max-lines=1 "$HADOLINT"
        - bash -c 'shopt -s globstar; shellcheck **/*.sh'
      # after_script:
      #   - fossa test
    - stage: build
      env: IMAGE=archisteamfarm VARIANT=alpine
      script:
        - cd "$IMAGE"
        - make build-alpine
        - docker images
      after_script:
        - if [ "$TRAVIS_BRANCH" == "master" ]; then
          make push-alpine ;
          fi
    # - stage: build
    #   env: IMAGE=code-server
    #   script:
    #     - cd "$IMAGE"
    #     - make build ARCH=amd64
    #     - docker images
    #   after_script:
    #     - if [ "$TRAVIS_BRANCH" == "master" ]; then
    #         make push amd64 ;
    #       fi
    # - stage: build
    #   env: IMAGE=code-server
    #   script:
    #     - cd "$IMAGE"
    #     - make build ARCH=arm64
    #     - docker images
    #   after_script:
    #     - if [ "$TRAVIS_BRANCH" == "master" ]; then
    #         make push arm64 ;
    #       fi
    - <<: *build
      env: IMAGE=halcyon
    - <<: *build
      env: IMAGE=kibitzr
    - <<: *build
      env: IMAGE=reddiscord VARIANT=amd64
    - <<: *build
      env: IMAGE=reddiscord VARIANT=armhf
    # - <<: *build
    #   env: IMAGE=reddiscord VARIANT=arm64
    # - stage: build
    #    env: IMAGE=reddiscord VARIANT=source
    #    script:
    #      - cd "$IMAGE"
    #      - make build-source
    #      - docker images
    #    after_script:
    #      - if [ "$TRAVIS_BRANCH" == "master" ]; then
    #          make push-source ;
    #        fi
    - <<: *build
      env: IMAGE=zeronet VARIANT=amd64
    - <<: *build
      env: IMAGE=zeronet VARIANT=armhf
    - <<: *build
      env: IMAGE=zeronet VARIANT=arm64

    - <<: *manifest
      stage: manifest
      env: IMAGE=archisteamfarm
    - <<: *manifest
      stage: manifest
      env: IMAGE=reddiscord
    - <<: *manifest
      stage: manifest
      env: IMAGE=zeronet

    - <<: *scan
      env: trivy=0.1.2 IMAGE=supersandro2000/archisteamfarm VARIANT=alpine
      script:
        - ./trivy --refresh --quiet
        - for variant in master tag; do
          ./trivy --exit-code 0 --severity HIGH --quiet $IMAGE:$variant-alpine ;
          ./trivy --exit-code 1 --severity CRITICAL --quiet $IMAGE:$variant-alpine ;
          done
    # - <<: *scan
    #   env: trivy=0.1.2 IMAGE=supersandro2000/code-server
    - <<: *scan
      env: trivy=0.1.2 IMAGE=supersandro2000/kibitzr
    - <<: *scan
      env: trivy=0.1.2 IMAGE=supersandro2000/reddiscord
      script:
        - ./trivy --refresh --quiet
        - for arch in amd64 armhf; do
          ./trivy --exit-code 0 --severity HIGH --quiet $IMAGE:$arch-source ;
          ./trivy --exit-code 0 --severity CRITICAL --quiet $IMAGE:$arch-source ;
          done
    # - <<: *scan
    #   env: trivy=0.1.2 IMAGE=supersandro2000/reddiscord VARIANT=source
    #   script:
    #     - ./trivy --refresh --quiet
    #     - for arch in amd64 armhf arm64; do
    #         ./trivy --exit-code 0 --severity HIGH --quiet $IMAGE:$arch-source ;
    #         ./trivy --exit-code 1 --severity CRITICAL --quiet $IMAGE:$arch-source ;
    #       done
    - <<: *scan
      env: trivy=0.1.2 IMAGE=supersandro2000/zeronet

# notifications:
#   webhooks:
#     - https://app.fossa.io/hooks/travisci
