dist: xenial
sudo: required
language: bash
group: travis_latest
services: 
  - docker
addons:
  apt:
    # update: true
    # sources:
    # - sourceline: 'deb [arch=amd64] "https://download.docker.com/linux/ubuntu" xenial stable edge test'
    packages:
    - jq
    # - docker-ce

env:
  global:
    - DOCKER_CLI_EXPERIMENTAL=enabled
    # - DOCKER_BUILDKIT=1

template:
- &build
  stage: build
  script:
    - cd "$IMAGE"
    - make build
    - docker images
  after_success:
    - if [ "$TRAVIS_BRANCH" == "master" ]; then
        make push ;
      fi

jobs:
  include:
    - stage: test
      env: HADOLINT="$HOME/hadolint"
      install: curl -sLo "$HADOLINT" $(curl -s https://api.github.com/repos/hadolint/hadolint/releases/latest?access_token="$GITHUB_TOKEN" | jq -r '.assets | .[] | select(.name=="hadolint-Linux-x86_64") | .browser_download_url')
               && chmod 700 ${HADOLINT}
      script:
        - git ls-files --exclude='*Dockerfile' --ignored | xargs --max-lines=1 "$HADOLINT"
        - bash -c 'shopt -s globstar; shellcheck **/*.sh'
    - <<: *build
      env: IMAGE=archisteamfarm
    - <<: *build
      env: IMAGE=archisteamfarm
      script:
        - cd "$IMAGE"
        - make build-alpine
        - docker images
      after_success:
        - if [ "$TRAVIS_BRANCH" == "master" ]; then
            make push-alpine ;
          fi
    # - <<: *build
    #   env: IMAGE=code-server
    #   script:
    #     - cd "$IMAGE"
    #     - make build ARCH=amd64
    #     - docker images
    #   after_success:
    #     - if [ "$TRAVIS_BRANCH" == "master" ]; then
    #         make push amd64 ;
    #       fi
    # - <<: *build
    #   env: IMAGE=code-server
    #   script:
    #     - cd "$IMAGE"
    #     - make build ARCH=arm64
    #     - docker images
    #   after_success:
    #     - if [ "$TRAVIS_BRANCH" == "master" ]; then
    #         make push arm64v8 ;
    #       fi
    # - <<: *build
    #   env: IMAGE=freshrss
    - <<: *build
      env: IMAGE=kibitzr
    - <<: *build
      env: IMAGE=reddiscord
    - <<: *build
      env: IMAGE=reddiscord
      script:
        - cd "$IMAGE"
        - make build-source
        - docker images
      after_success:
        - if [ "$TRAVIS_BRANCH" == "master" ]; then
            make push-source ;
          fi 
    - <<: *build
      env: IMAGE=zeronet
