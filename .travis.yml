os: linux
dist: bionic
language: shell
group: travis_latest
services:
  - docker

addons:
  apt:
    packages:
      # - docker-ce
      - jq

env:
  global:
    - DOCKER_CLI_EXPERIMENTAL=enabled
    # - DOCKER_BUILDKIT=1

stages:
  - lint
  - Build base
  - build
  - manifest
  - scan

.template:
  - &build
    stage: build
    env: MANIFEST=true
    script:
      - pip install j2cli
      - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - cd "$IMAGE"
      - make build;
      - docker images
    after_script:
      - if [[ $TRAVIS_BRANCH == master ]]; then
          make push;
          if [[ $MANIFEST == true ]]; then
           make manifest;
        fi

  - &manifest
    stage: manifest
    script:
      - cd "$IMAGE"
      - if [[ $TRAVIS_BRANCH == master ]]; then
          make manifest;
        fi

  - &scan-multi-arch
    stage: scan
    cache:
      directories:
        - $HOME/.cache/trivy
    install:
      - make trivy
    script:
      - ./trivy --refresh --quiet || ./trivy --reset
      - for arch in amd64 armhf arm64; do
        ./trivy --exit-code 0 --severity HIGH -quiet $IMAGE:$arch-latest ;
        ./trivy --exit-code 1 --severity CRITICAL --quiet $IMAGE:$arch-latest ;
        done

  - &scan
    stage: scan
    cache:
      directories:
        - $HOME/.cache/trivy
    install:
        - make trivy
    script:
      - ./trivy --refresh --quiet || ./trivy --reset
      - ./trivy --exit-code 0 --severity HIGH --quiet $IMAGE:latest
      - ./trivy --exit-code 1 --severity CRITICAL --quiet $IMAGE:latest

jobs:
  include:
    - stage: lint
      # install:
        # - "curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install.sh | sudo bash"
      script:
        # - fossa init
        - make hadolint
        - make shellcheck
      # after_script:
      #   - fossa test

    - <<: *build
      stage: Build base
      env: IMAGE=base-alpine

    - <<: *build
      env: IMAGE=archisteamfarm VARIANT=alpine
    - <<: *build
      env: IMAGE=code-server-extra
    - <<: *build
      env: IMAGE=halcyon
    - <<: *build
      env: IMAGE=healthchecks VARIANTS=amd64 MANIFEST=false
    - <<: *build
      arch: arm64
      env: IMAGE=healthchecks VARIANTS=arm64 MANIFEST=false
    - <<: *build
      env: IMAGE=kibitzr
    - <<: *build
      env: IMAGE=prerenderer
    - <<: *build
      env: IMAGE=reddiscord VARIANTS=amd64,armhf MANIFEST=false
    - <<: *build
      env: IMAGE=reddiscord TAGS=source VARIANTS=amd64,armhf VERSIONS=source MANIFEST=false
    - <<: *build
      arch: arm64
      env: IMAGE=reddiscord VARIANTS=arm64 MANIFEST=false
      install:
        - sudo apt install zip
    - <<: *build
      env: IMAGE=thelounge
    - <<: *build
      env: IMAGE=unbound
    - <<: *build
      env: IMAGE=zeronet

    - <<: *manifest
      env: IMAGE=archisteamfarm
      before_script:
        - if [[ $TRAVIS_BRANCH == master ]]; then
            cd archisteamfarm;
            ./manifest.sh;
          fi
    - <<: *manifest
      env: IMAGE=healthchecks
    - <<: *manifest
      env: IMAGE=reddiscord

    - <<: *scan-multi-arch
      env: IMAGE=supersandro2000/archisteamfarm VARIANT=alpine
      script:
        - ./trivy --refresh --quiet || ./travis --reset
        - for arch in master tag; do
          ./trivy --exit-code 0 --severity HIGH --quiet $IMAGE:$arch-alpine ;
          ./trivy --exit-code 1 --severity CRITICAL --quiet $IMAGE:$arch-alpine ;
          done
    - <<: *scan
      env: IMAGE=supersandro2000/healthchecks
    - <<: *scan-multi-arch
      env: IMAGE=supersandro2000/kibitzr
    - <<: *scan
      env: IMAGE=supersandro2000/prerenderer
    # - <<: *scan-multi-arch
    #   env: IMAGE=supersandro2000/reddiscord VARIANT=source
    - <<: *scan
      env: IMAGE=supersandro2000/unbound
    - <<: *scan-multi-arch
      env: IMAGE=supersandro2000/zeronet

# notifications:
#   webhooks:
#     - https://app.fossa.io/hooks/travisci
